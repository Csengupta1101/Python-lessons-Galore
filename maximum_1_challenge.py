# -*- coding: utf-8 -*-
"""maximum 1 challenge.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KvzpM7SIGQxNbQPeFgItEwcWMUeZKRlT
"""

list1 = [56,48,45,89,59,52]
list2 = [6,87,13,52]
list1.append(list2)
print(list1)

#Program to print Left Half Pyramid
num_rows = int(input("Enter the number of rows"));
k = 1
for i in range(0, num_rows):
    for j in range(0, k):
        print("*", end=" ")
        k = k + 1
        print(i)

print(' *')
print('***')
print(' *')

i = 0
for i in range(2):
  print('*')
  i = i+1
  print('*',end="")
  i = i - 1

def getMaxLength(arr, n):
 
    # intitialize count
    count = 0
     
    # initialize max
    result = 0
 
    for i in range(0, n):
     
        # Reset count when 0 is found
        if (arr[i] == 0):
            count = 0
 
        # If 1 is found, increment count
        # and update result if count
        # becomes more.
        else:
             
            # increase count
            count+= 1
            result = max(result, count)
         
    return result
arr = [1, 1, 0, 0, 1, 0, 1,
             0, 1, 1, 1, 1]
n = len(arr)
 
print(getMaxLength(arr, n))