# -*- coding: utf-8 -*-
"""Advanced Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tIVVTDNh2CJr_UgA2IWzdjg6sGOXaDpN
"""

#enumarate function
#print third , fifth and sevent element of a list with index
l1 = [2,3,5,6,9,8,7,41,5]
for index , item in enumerate (l1):
  if index == 2 or index == 4 or index == 6:
    print(index,item)

#List Comprehension
#print a user input number multiplication table with list comprehension
a = int(input())
List1 = [a*i for i in range(1,11)]
print(List1)

#zerodivisionerro printed as infinite
a = int(input())
b = int(input())
try:
  print(a/b)
except:
  print('infinite')

#lambda function
cust_func = lambda a:(a*a)+(a+a)
a = int(input())
print(cust_func(a))

Mult_func = lambda a,b,c:(a+b)*(b*c)*(a+c)
a = int(input())
b = int(input())
c = int(input())
print(Mult_func(a,b,c))

#list joining
print('*******')
l1 = ['*     *','*     *','*     *','*     *','*     *','*******']
sl1 = '\n'.join(l1)
print(sl1)

#square method
def square(num):
  return num*num
a = int(input())
print(square(a))

#list method 
a = int(input())
b = int(input())
c = int(input())
l1 = [a,b,c]
l2= []
for item in l1:
  l2.append(square(item))
print(l2)

69